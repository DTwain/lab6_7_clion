        -:    0:Source:/mnt/d/INFO 2/SEM 2/OOP/lab6-7---oop/teste/test_validator.cpp
        -:    0:Graph:/mnt/d/INFO 2/SEM 2/OOP/lab6-7---oop/cmake-build-debug-coverage/CMakeFiles/lab6_7_clion.dir/teste/test_validator.cpp.gcno
        -:    0:Data:/mnt/d/INFO 2/SEM 2/OOP/lab6-7---oop/cmake-build-debug-coverage/CMakeFiles/lab6_7_clion.dir/teste/test_validator.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by obrej on 4/11/2024.
        -:    3://
        -:    4:
        -:    5:#include <cassert>
        -:    6:#include <sstream>
        -:    7:#include "../Headers/teste.h"
        -:    8:#include "../Headers/validator.h"
        -:    9:
function _ZN14test_validator16tester_validatorEv called 1 returned 100% blocks executed 47%
        1:   10:void test_validator::tester_validator(){
        -:   11:    validator_carte validator;
        2:   12:    carte book1 = carte("Luis", "Jupanii", "epic", 1842, 0);
        1:   12-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   12-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   12-block  2
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   12-block  3
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
call   15 returned 1
call   16 returned 1
call   17 returned 1
call   18 returned 1
call   19 returned 1
    $$$$$:   12-block  4
    $$$$$:   12-block  5
    $$$$$:   12-block  6
    $$$$$:   12-block  7
    $$$$$:   12-block  8
    $$$$$:   12-block  9
        2:   13:    carte book2 = carte("Kong", "", "liric", 1940, 1);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   13-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   13-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   13-block  2
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
call   15 returned 1
call   16 returned 1
call   17 returned 1
call   18 returned 1
call   19 returned 1
    $$$$$:   13-block  3
    $$$$$:   13-block  4
    $$$$$:   13-block  5
    $$$$$:   13-block  6
    $$$$$:   13-block  7
    $$$$$:   13-block  8
        2:   14:    carte book3 = carte("Luis", "", "", 1842, 2);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   14-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   14-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   14-block  2
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
call   15 returned 1
call   16 returned 1
call   17 returned 1
call   18 returned 1
call   19 returned 1
    $$$$$:   14-block  3
    $$$$$:   14-block  4
    $$$$$:   14-block  5
    $$$$$:   14-block  6
    $$$$$:   14-block  7
    $$$$$:   14-block  8
        2:   15:    carte book4 = carte("", "Maria", "", 1940, 3);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   15-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   15-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   15-block  2
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
call   15 returned 1
call   16 returned 1
call   17 returned 1
call   18 returned 1
call   19 returned 1
    $$$$$:   15-block  3
    $$$$$:   15-block  4
    $$$$$:   15-block  5
    $$$$$:   15-block  6
    $$$$$:   15-block  7
    $$$$$:   15-block  8
        2:   16:    carte book5 = carte("Luis", "Jupanii", "epic", 2034, 4);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   16-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   16-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   16-block  2
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
call   15 returned 1
call   16 returned 1
call   17 returned 1
call   18 returned 1
call   19 returned 1
    $$$$$:   16-block  3
    $$$$$:   16-block  4
    $$$$$:   16-block  5
    $$$$$:   16-block  6
    $$$$$:   16-block  7
    $$$$$:   16-block  8
        -:   17:
        1:   18:    validator.validate(book1);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   19:
        -:   20:    try{
        1:   21:        validator.validate(book2);
        1:   21-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1 (throw)
        -:   22:    }
        1:   23:    catch(const book_validation_exception& ex){
        1:   23-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:   23-block  1
call    2 returned 1
        1:   24:        std::stringstream ss;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   25:        ss << ex;
        1:   25-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   26:        auto mesaj = ss.str();
        1:   26-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   27:        assert(mesaj.find("Titlul") == 0);
        1:   27-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    $$$$$:   27-block  1
call    3 never executed
        1:   28:        ss.clear();
        1:   28-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   29:    }
        1:   29-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
    $$$$$:   29-block  1
call    5 never executed
    $$$$$:   29-block  2
call    6 never executed
    $$$$$:   29-block  3
call    7 never executed
        -:   30:
        -:   31:    try{
        1:   32:        validator.validate(book3);
        1:   32-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1 (throw)
        -:   33:    }
        1:   34:    catch(const book_validation_exception& ex){
        1:   34-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:   34-block  1
call    2 returned 1
        1:   35:        std::stringstream ss;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   36:        ss << ex;
        1:   36-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   37:        auto mesaj = ss.str();
        1:   37-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   38:        assert(mesaj.find("Titlul") == 0);
        1:   38-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    $$$$$:   38-block  1
call    3 never executed
        1:   39:        assert(mesaj.find("Genul") >= 0);
        1:   39-block  0
call    0 returned 1
        1:   40:        ss.clear();
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   41:    }
        1:   41-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
    $$$$$:   41-block  1
call    5 never executed
    $$$$$:   41-block  2
call    6 never executed
    $$$$$:   41-block  3
call    7 never executed
        -:   42:
        -:   43:    try{
        1:   44:        validator.validate(book4);
        1:   44-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1 (throw)
        -:   45:    }
        1:   46:    catch(const book_validation_exception& ex){
        1:   46-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:   46-block  1
call    2 returned 1
        1:   47:        std::stringstream ss;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   48:        ss << ex;
        1:   48-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   49:        auto mesaj = ss.str();
        1:   49-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   50:        assert(mesaj.find("Autorul") == 0);
        1:   50-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    $$$$$:   50-block  1
call    3 never executed
        1:   51:        assert(mesaj.find("Genul") >= 0);
        1:   51-block  0
call    0 returned 1
        1:   52:        ss.clear();
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   53:    }
        1:   53-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
    $$$$$:   53-block  1
call    5 never executed
    $$$$$:   53-block  2
call    6 never executed
    $$$$$:   53-block  3
call    7 never executed
        -:   54:
        -:   55:    try{
        1:   56:        validator.validate(book5);
        1:   56-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1 (throw)
        -:   57:    }
        1:   58:    catch(const book_validation_exception& ex){
        1:   58-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:   58-block  1
call    2 returned 1
        1:   59:        std::stringstream ss;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   60:        ss << ex;
        1:   60-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   61:        auto mesaj = ss.str();
        1:   61-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   62:        assert(mesaj.find("Anul") == 0);
        1:   62-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    $$$$$:   62-block  1
call    3 never executed
        1:   63:        ss.clear();
        1:   63-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   64:    }
        1:   64-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
    $$$$$:   64-block  1
call    5 never executed
    $$$$$:   64-block  2
call    6 never executed
    $$$$$:   64-block  3
call    7 never executed
        -:   65:
        1:   66:}
        1:   66-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
call    4 returned 1
    $$$$$:   66-block  1
call    5 never executed
    $$$$$:   66-block  2
call    6 never executed
    $$$$$:   66-block  3
call    7 never executed
    $$$$$:   66-block  4
call    8 never executed
    $$$$$:   66-block  5
call    9 never executed
