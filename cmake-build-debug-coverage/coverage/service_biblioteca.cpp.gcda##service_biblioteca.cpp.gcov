        -:    0:Source:D:/INFO 2/SEM 2/OOP/lab6-7---oop/service/service_biblioteca.cpp
        -:    0:Graph:D:\INFO 2\SEM 2\OOP\lab6-7---oop\cmake-build-debug-coverage\CMakeFiles\lab6_7_clion.dir\service\service_biblioteca.cpp.gcno
        -:    0:Data:D:\INFO 2\SEM 2\OOP\lab6-7---oop\cmake-build-debug-coverage\CMakeFiles\lab6_7_clion.dir\service\service_biblioteca.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by obrej on 4/10/2024.
        -:    3://
        -:    4:
        -:    5:#include "../Headers/service_biblioteca.h"
        -:    6:#include <string>
        -:    7:#include <algorithm>
        -:    8:
        -:    9:// return a reference to a my_vector class obj, used for printing
function _ZNK18service_biblioteca29get_reference_from_vector_srvEv called 1 returned 100% blocks executed 100%
        1:   10:const vector<carte>& service_biblioteca::get_reference_from_vector_srv() const noexcept {
        1:   11:    return repo_carti.get_reference_from_vector();
        1:   11-block  0
call    0 returned 1
        -:   12:}
        -:   13:
        -:   14:/*
        -:   15: * Adauga carte in repo, daca exista
        -:   16: */
function _ZN18service_biblioteca12add_book_srvERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_RKi called 28 returned 96% blocks executed 57%
       28:   17:void service_biblioteca::add_book_srv(const std::string &autor, const std::string &titlu, const std::string &genre,
        -:   18:                                      const int &an) {
       28:   19:    carte book_to_be_added{autor, titlu, genre, an, repo_carti.get_id_for_next_book_to_be_added()};
       28:   19-block  0
call    0 returned 28
branch  1 taken 28 (fallthrough)
branch  2 taken 0 (throw)
       28:   19-block  1
call    3 returned 28
branch  4 taken 28 (fallthrough)
branch  5 taken 0 (throw)
       28:   19-block  2
call    6 returned 28
branch  7 taken 28 (fallthrough)
branch  8 taken 0 (throw)
       28:   19-block  3
call    9 returned 28
branch 10 taken 28 (fallthrough)
branch 11 taken 0 (throw)
       28:   19-block  4
call   12 returned 28
branch 13 taken 28 (fallthrough)
branch 14 taken 0 (throw)
       28:   19-block  5
call   15 returned 28
call   16 returned 28
call   17 returned 28
    $$$$$:   19-block  6
call   18 never executed
    $$$$$:   19-block  7
    $$$$$:   19-block  8
call   19 never executed
    $$$$$:   19-block  9
    $$$$$:   19-block 10
call   20 never executed
    $$$$$:   19-block 11
       28:   20:    validator.validate(book_to_be_added);
call    0 returned 28
branch  1 taken 27 (fallthrough)
branch  2 taken 1 (throw)
       27:   21:    repo_carti.add(book_to_be_added);
       27:   21-block  0
call    0 returned 27
branch  1 taken 27 (fallthrough)
branch  2 taken 0 (throw)
        -:   22:
       27:   23:    undo_actions_list.push_back(std::make_unique<undo_add>(repo_carti, book_to_be_added));
       27:   23-block  0
call    0 returned 27
branch  1 taken 27 (fallthrough)
branch  2 taken 0 (throw)
       27:   23-block  1
call    3 returned 27
call    4 returned 27
branch  5 taken 27 (fallthrough)
branch  6 taken 0 (throw)
       27:   23-block  2
call    7 returned 27
call    8 returned 27
    $$$$$:   23-block  3
call    9 never executed
    $$$$$:   23-block  4
call   10 never executed
    $$$$$:   23-block  5
    $$$$$:   23-block  6
       28:   24:}
call    0 returned 27
        1:   24-block  0
call    1 returned 1
        -:   25:
        -:   26:/*
        -:   27: * Sterge carte din repo
        -:   28: */
function _ZN18service_biblioteca15delete_book_srvERKi called 8 returned 75% blocks executed 70%
        8:   29:void service_biblioteca::delete_book_srv(const int &id) {
        8:   30:    carte book_to_be_added_in_undo;
        8:   30-block  0
call    0 returned 8
        -:   31:    try {
        8:   32:        carte book{ repo_carti.find_book_by_id(id) };
call    0 returned 8
branch  1 taken 6 (fallthrough)
branch  2 taken 2 (throw)
        6:   32-block  0
call    3 returned 6
branch  4 taken 6 (fallthrough)
branch  5 taken 0 (throw)
        6:   33:        book_to_be_added_in_undo = book;
        6:   33-block  0
call    0 returned 6
branch  1 taken 6 (fallthrough)
branch  2 taken 0 (throw)
        6:   34:    }
        6:   34-block  0
call    0 returned 6
    $$$$$:   34-block  1
call    1 never executed
        2:   35:    catch(book_repo_exception&){
        2:   35-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 2
        2:   35-block  1
call    2 returned 2
        2:   36:    }
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        8:   37:    repo_carti.delete_book(id);
        8:   37-block  0
call    0 returned 8
branch  1 taken 6 (fallthrough)
branch  2 taken 2 (throw)
        6:   38:    undo_actions_list.push_back(std::make_unique<undo_delete>(repo_carti, book_to_be_added_in_undo));
        6:   38-block  0
call    0 returned 6
branch  1 taken 6 (fallthrough)
branch  2 taken 0 (throw)
        6:   38-block  1
call    3 returned 6
call    4 returned 6
branch  5 taken 6 (fallthrough)
branch  6 taken 0 (throw)
        6:   38-block  2
call    7 returned 6
call    8 returned 6
    $$$$$:   38-block  3
call    9 never executed
    $$$$$:   38-block  4
call   10 never executed
    $$$$$:   38-block  5
    $$$$$:   38-block  6
        8:   39:}
call    0 returned 6
        2:   39-block  0
call    1 returned 2
        -:   40:
        -:   41:/*
        -:   42: * Modifica carte din repo, daca exista.
        -:   43: */
function _ZN18service_biblioteca15modify_book_srvERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_RKiS9_ called 3 returned 33% blocks executed 56%
        3:   44:void service_biblioteca::modify_book_srv(const std::string &autor, const std::string &titlu, const std::string &genre,
        -:   45:                                         const int &an, const int &id) {
        3:   46:    carte modified_book{autor, titlu, genre, an, id};
        3:   46-block  0
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        3:   46-block  1
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
        3:   46-block  2
call    6 returned 3
branch  7 taken 3 (fallthrough)
branch  8 taken 0 (throw)
        3:   46-block  3
call    9 returned 3
branch 10 taken 3 (fallthrough)
branch 11 taken 0 (throw)
        3:   46-block  4
call   12 returned 3
call   13 returned 3
call   14 returned 3
    $$$$$:   46-block  5
call   15 never executed
    $$$$$:   46-block  6
    $$$$$:   46-block  7
call   16 never executed
    $$$$$:   46-block  8
    $$$$$:   46-block  9
call   17 never executed
    $$$$$:   46-block 10
        3:   47:    validator.validate(modified_book);
call    0 returned 3
branch  1 taken 2 (fallthrough)
branch  2 taken 1 (throw)
        2:   48:    repo_carti.modify_book(modified_book);
        2:   48-block  0
call    0 returned 2
branch  1 taken 1 (fallthrough)
branch  2 taken 1 (throw)
        -:   49:
        1:   50:    undo_actions_list.push_back(std::make_unique<undo_modify>(repo_carti, modified_book));
        1:   50-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   50-block  1
call    3 returned 1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   50-block  2
call    7 returned 1
call    8 returned 1
    $$$$$:   50-block  3
call    9 never executed
    $$$$$:   50-block  4
call   10 never executed
    $$$$$:   50-block  5
    $$$$$:   50-block  6
        3:   51:}
call    0 returned 1
        2:   51-block  0
call    1 returned 2
        -:   52:
function _ZN18service_biblioteca7do_undoEv called 6 returned 83% blocks executed 70%
        6:   53:void service_biblioteca::do_undo() {
        6:   54:    if(undo_actions_list.size() == 0)
        6:   54-block  0
call    0 returned 6
branch  1 taken 1 (fallthrough)
branch  2 taken 5
        3:   55:        throw books_service_exception{"No undo to be done"};
        1:   55-block  0
call    0 returned 1
        1:   55-block  1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   55-block  2
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   55-block  3
call    7 returned 1
        1:   55-block  4
call    8 returned 0
    $$$$$:   55-block  5
call    9 never executed
    $$$$$:   55-block  6
    $$$$$:   55-block  7
    $$$$$:   55-block  8
call   10 never executed
        -:   56:
        5:   57:    undo_actions_list.back()->do_undo();
        5:   57-block  0
call    0 returned 5
call    1 returned 5
call    2 returned 5
        5:   58:    undo_actions_list.pop_back();
call    0 returned 5
        5:   59:}
        -:   60:
        -:   61:/*
        -:   62: * Returneaza o referinta catre obiectul de tip my_vector, care stocheaza cartile
        -:   63: */
function _ZN18service_biblioteca11get_all_srvEv called 5 returned 100% blocks executed 100%
        5:   64:const vector<carte>& service_biblioteca::get_all_srv() noexcept{
        5:   65:    return repo_carti.get_all();
        5:   65-block  0
call    0 returned 5
        -:   66:}
        -:   67:/*
        -:   68: * Returneaza o referinta catre o carte care are cel putin unui din campuri egal cu autor, titlu, genre sau an
        -:   69: * Daca nu gaseste nicio carte ridica o exceptie
        -:   70: */
function _ZN18service_biblioteca15search_for_bookERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_RKi called 2 returned 50% blocks executed 53%
        2:   71:const carte& service_biblioteca::search_for_book(const std::string &autor, const std::string &titlu, const std::string &genre,
        -:   72:                                                 const int &an) {
        2:   73:    const vector<carte>& all{ repo_carti.get_all() };
        2:   73-block  0
call    0 returned 2
function _ZZN18service_biblioteca15search_for_bookERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_RKiENKUlRK5carteE_clESC_ called 8 returned 100% blocks executed 67%
        2:   74:    auto itr = std::find_if(all.begin(), all.end(), [autor, titlu, genre, an](const carte& book) {
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:   74-block  0
call    3 returned 2
branch  4 taken 2 (fallthrough)
branch  5 taken 0 (throw)
        2:   74-block  1
call    6 returned 2
branch  7 taken 2 (fallthrough)
branch  8 taken 0 (throw)
        2:   74-block  2
call    9 returned 2
call   10 returned 2
call   11 returned 2
branch 12 taken 2 (fallthrough)
branch 13 taken 0 (throw)
        2:   74-block  3
call   14 returned 2
    $$$$$:   74-block  4
call   15 never executed
    $$$$$:   74-block  5
branch 16 never executed (fallthrough)
branch 17 never executed
    $$$$$:   74-block  6
call   18 never executed
    $$$$$:   74-block  7
branch 19 never executed (fallthrough)
branch 20 never executed
    $$$$$:   74-block  8
call   21 never executed
    $$$$$:   74-block  9
branch 22 never executed (fallthrough)
branch 23 never executed
    $$$$$:   74-block 10
call   24 never executed
    $$$$$:   74-block 11
       15:   75:        return book.get_author() == autor ||
branch  0 taken 7 (fallthrough)
branch  1 taken 0
        8:   75-block  0
call    2 returned 8
        8:   75-block  1
    $$$$$:   75-block  2
branch  3 never executed (fallthrough)
branch  4 never executed
    $$$$$:   75-block  3
call    5 never executed
       22:   76:               book.get_title() == titlu ||
        7:   76-block  0
call    0 returned 7
branch  1 taken 7 (fallthrough)
branch  2 taken 0 (throw)
        7:   76-block  1
call    3 returned 7
branch  4 taken 7 (fallthrough)
branch  5 taken 0
        7:   76-block  2
call    6 returned 7
        8:   76-block  3
branch  7 taken 8 (fallthrough)
branch  8 taken 0
    $$$$$:   76-block  4
branch  9 never executed (fallthrough)
branch 10 never executed
    $$$$$:   76-block  5
call   11 never executed
    $$$$$:   76-block  6
       30:   77:               book.get_genre() == genre ||
        8:   77-block  0
call    0 returned 8
branch  1 taken 8 (fallthrough)
branch  2 taken 0 (throw)
        8:   77-block  1
call    3 returned 8
branch  4 taken 7 (fallthrough)
branch  5 taken 1
        7:   77-block  2
call    6 returned 7
branch  7 taken 7 (fallthrough)
branch  8 taken 0 (throw)
        7:   77-block  3
call    9 returned 7
        1:   77-block  4
        7:   77-block  5
        7:   77-block  6
call   10 returned 7
        8:   77-block  7
branch 11 taken 7 (fallthrough)
branch 12 taken 1
    $$$$$:   77-block  8
branch 13 never executed (fallthrough)
branch 14 never executed
    $$$$$:   77-block  9
call   15 never executed
    $$$$$:   77-block 10
       23:   78:               book.get_publication_year() == an;
        7:   78-block  0
call    0 returned 7
branch  1 taken 7 (fallthrough)
branch  2 taken 0 (throw)
        7:   78-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 7
        8:   78-block  2
branch  5 taken 7 (fallthrough)
branch  6 taken 1
        8:   78-block  3
        -:   79:    }); // find_if returneaza un iterator care pointeaza catre primul match pe care ul gaseste
        -:   80:
        2:   81:    if (itr != all.end()) {
call    0 returned 2
call    1 returned 2
branch  2 taken 1 (fallthrough)
branch  3 taken 1
        2:   82:        return *itr;
        1:   82-block  0
call    0 returned 1
        1:   82-block  1
        -:   83:    } else
        3:   84:        throw books_service_exception{"Nu s-a gasit nicio carte cu datele introduse"};
        1:   84-block  0
call    0 returned 1
        1:   84-block  1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   84-block  2
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   84-block  3
call    7 returned 1
        1:   84-block  4
call    8 returned 1
    $$$$$:   84-block  5
call    9 never executed
    $$$$$:   84-block  6
    $$$$$:   84-block  7
    $$$$$:   84-block  8
call   10 never executed
        -:   85:}
        -:   86:
        -:   87:/*
        -:   88: * Raport privind numarul de carti de fiecare tip, liric / epic / dramatic
        -:   89: * Return type: map<string, DTO_carte>
        -:   90: * string: liric / epic / dramatic
        -:   91: *
        -:   92: */
function _ZN18service_biblioteca6raportB5cxx11Ev called 2 returned 100% blocks executed 75%
        2:   93:std::map<string, DTO_carte> service_biblioteca::raport(){
        2:   94:    const vector<carte>& all{ repo_carti.get_all() };
        2:   94-block  0
call    0 returned 2
        2:   95:    map<string, DTO_carte> raport;
call    0 returned 2
        -:   96:
        9:   97:    for(const carte& book: all){
call    0 returned 2
call    1 returned 2
        7:   97-block  0
call    2 returned 7
call    3 returned 7
        9:   97-block  1
call    4 returned 9
branch  5 taken 7
branch  6 taken 2 (fallthrough)
        7:   98:        string gen = book.get_genre();
call    0 returned 7
branch  1 taken 7 (fallthrough)
branch  2 taken 0 (throw)
       46:   99:        for(auto &c: gen)
        7:   99-block  0
call    0 returned 7
call    1 returned 7
       39:   99-block  1
call    2 returned 39
       46:   99-block  2
call    3 returned 46
branch  4 taken 39
branch  5 taken 7 (fallthrough)
       39:  100:            c = tolower(c);
call    0 returned 39
        -:  101:
        7:  102:        if(raport.find(gen) != raport.end())
        7:  102-block  0
call    0 returned 7
call    1 returned 7
branch  2 taken 7 (fallthrough)
branch  3 taken 0 (throw)
        7:  102-block  1
call    4 returned 7
branch  5 taken 1 (fallthrough)
branch  6 taken 6
    $$$$$:  102-block  2
    $$$$$:  102-block  3
        1:  103:            raport[gen].numar_entitati += 1;
        1:  103-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  103-block  1
        -:  104:        else
        6:  105:            raport[gen] = DTO_carte(gen, 1);
        6:  105-block  0
call    0 returned 6
branch  1 taken 6 (fallthrough)
branch  2 taken 0 (throw)
        6:  105-block  1
call    3 returned 6
branch  4 taken 6 (fallthrough)
branch  5 taken 0 (throw)
        6:  105-block  2
call    6 returned 6
call    7 returned 6
    $$$$$:  105-block  3
call    8 never executed
    $$$$$:  105-block  4
        7:  106:    }
        7:  106-block  0
call    0 returned 7
    $$$$$:  106-block  1
call    1 never executed
        2:  107:    return raport;
        2:  107-block  0
        2:  107-block  1
    =====:  108:}
    $$$$$:  108-block  0
call    0 never executed
        -:  109:/*
        -:  110: * Filtreaza cartile dupa an si titlu
        -:  111: * Daca gaseste o carte cu un camp egal cu $an sau $titlu o adauga in lista
        -:  112: */
function _ZNK18service_biblioteca10filter_srvEiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 2 returned 100% blocks executed 71%
        2:  113:const vector<carte> service_biblioteca::filter_srv(const int an, const string titlu) const {
        2:  114:    vector<carte> filtered_books;
        2:  115:    const vector<carte>& all{ repo_carti.get_all() };
        2:  115-block  0
call    0 returned 2
function _ZZNK18service_biblioteca10filter_srvEiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEENKUlRK5carteE_clES8_ called 8 returned 100% blocks executed 81%
        2:  116:    std::copy_if(all.begin(), all.end(), std::back_inserter(filtered_books), [an, titlu](const carte& book)
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:  116-block  0
call    3 returned 2
branch  4 taken 2 (fallthrough)
branch  5 taken 0 (throw)
        2:  116-block  1
call    6 returned 2
call    7 returned 2
call    8 returned 2
branch  9 taken 2 (fallthrough)
branch 10 taken 0 (throw)
        2:  116-block  2
call   11 returned 2
    $$$$$:  116-block  3
call   12 never executed
    $$$$$:  116-block  4
        8:  117:    { return book.get_publication_year() == an || book.get_title() == titlu; });
        8:  117-block  0
call    0 returned 8
branch  1 taken 8 (fallthrough)
branch  2 taken 0 (throw)
        8:  117-block  1
branch  3 taken 7 (fallthrough)
branch  4 taken 1
        7:  117-block  2
call    5 returned 7
branch  6 taken 7 (fallthrough)
branch  7 taken 0 (throw)
        7:  117-block  3
call    8 returned 7
branch  9 taken 1 (fallthrough)
branch 10 taken 6
        2:  117-block  4
        6:  117-block  5
        8:  117-block  6
        8:  117-block  7
branch 11 taken 7 (fallthrough)
branch 12 taken 1
        7:  117-block  8
call   13 returned 7
        8:  117-block  9
        8:  117-block 10
    $$$$$:  117-block 11
branch 14 never executed (fallthrough)
branch 15 never executed
    $$$$$:  117-block 12
call   16 never executed
        -:  118:
        2:  119:    return filtered_books;
        2:  119-block  0
    =====:  120:}
    $$$$$:  120-block  0
call    0 never executed
        -:  121:
        -:  122:
        -:  123:/*
        -:  124: * Determina functia care va compara doua carti si va decide daca ele se interschimba
        -:  125: * option : 1 / 2 / 3
        -:  126: * Return type: referinta catre obiectul sortat
        -:  127: */
function _ZNK18service_biblioteca22sorter_based_on_optionEi called 4 returned 100% blocks executed 94%
        4:  128:const vector<carte> service_biblioteca::sorter_based_on_option(int option) const{
        4:  129:    vector<carte> all{ repo_carti.get_all() };
        4:  129-block  0
call    0 returned 4
call    1 returned 4
        4:  130:    if(option == 1)
branch  0 taken 1 (fallthrough)
branch  1 taken 3
        1:  131:        sort(all.begin(), all.end(), repo_carti.sort_by_title);
        1:  131-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
        3:  132:    else if(option == 2)
        3:  132-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 2
        1:  133:        sort(all.begin(), all.end(), repo_carti.sort_by_author);
        1:  133-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
        -:  134:    else
        2:  135:        sort(all.begin(), all.end(), repo_carti.sort_by_publication_year_and_gen);
        2:  135-block  0
call    0 returned 2
call    1 returned 2
call    2 returned 2
branch  3 taken 2 (fallthrough)
branch  4 taken 0 (throw)
        4:  136:    return all;
        4:  136-block  0
        4:  136-block  1
    =====:  137:}
    $$$$$:  137-block  0
call    0 never executed
        -:  138:
function _ZlsRSoRK23books_service_exception called 1 returned 100% blocks executed 100%
        1:  139:ostream& operator<<(ostream& out, const books_service_exception& ex){
        1:  140:    out << ex.msg;
        1:  140-block  0
call    0 returned 1
        1:  141:    return out;
        -:  142:}
        -:  143:
        -:  144:
