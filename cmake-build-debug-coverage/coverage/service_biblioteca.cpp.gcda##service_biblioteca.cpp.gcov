        -:    0:Source:/mnt/d/INFO 2/SEM 2/OOP/lab6-7---oop/service/service_biblioteca.cpp
        -:    0:Graph:/mnt/d/INFO 2/SEM 2/OOP/lab6-7---oop/cmake-build-debug-coverage/CMakeFiles/lab6_7_clion.dir/service/service_biblioteca.cpp.gcno
        -:    0:Data:/mnt/d/INFO 2/SEM 2/OOP/lab6-7---oop/cmake-build-debug-coverage/CMakeFiles/lab6_7_clion.dir/service/service_biblioteca.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by obrej on 4/10/2024.
        -:    3://
        -:    4:
        -:    5:#include "../Headers/service_biblioteca.h"
        -:    6:#include <string>
        -:    7:#include <algorithm>
        -:    8:
        -:    9:// return a reference to a my_vector class obj, used for printing
function _ZNK18service_biblioteca29get_reference_from_vector_srvEv called 1 returned 100% blocks executed 100%
        1:   10:const vector<carte>& service_biblioteca::get_reference_from_vector_srv() const noexcept {
        1:   11:    return repo_carti.get_reference_from_vector();
        1:   11-block  0
call    0 returned 1
        -:   12:}
        -:   13:
        -:   14:/*
        -:   15: * Adauga carte in repo, daca exista
        -:   16: */
function _ZN18service_biblioteca12add_book_srvERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_RKi called 21 returned 95% blocks executed 62%
       21:   17:void service_biblioteca::add_book_srv(const std::string &autor, const std::string &titlu, const std::string &genre,
        -:   18:                                      const int &an) {
       42:   19:    carte book_to_be_added{autor, titlu, genre, an, repo_carti.get_id_for_next_book_to_be_added()};
       21:   19-block  0
call    0 returned 21
branch  1 taken 21 (fallthrough)
branch  2 taken 0 (throw)
       21:   19-block  1
call    3 returned 21
branch  4 taken 21 (fallthrough)
branch  5 taken 0 (throw)
       21:   19-block  2
call    6 returned 21
branch  7 taken 21 (fallthrough)
branch  8 taken 0 (throw)
       21:   19-block  3
call    9 returned 21
branch 10 taken 21 (fallthrough)
branch 11 taken 0 (throw)
       21:   19-block  4
call   12 returned 21
branch 13 taken 21 (fallthrough)
branch 14 taken 0 (throw)
call   15 returned 21
call   16 returned 21
    $$$$$:   19-block  5
    $$$$$:   19-block  6
    $$$$$:   19-block  7
       21:   20:    validator.validate(book_to_be_added);
call    0 returned 21
branch  1 taken 20 (fallthrough)
branch  2 taken 1 (throw)
       20:   21:    repo_carti.add(book_to_be_added);
       20:   21-block  0
call    0 returned 20
branch  1 taken 20 (fallthrough)
branch  2 taken 0 (throw)
       21:   22:}
       20:   22-block  0
call    0 returned 20
        1:   22-block  1
call    1 returned 1
        -:   23:
        -:   24:/*
        -:   25: * Sterge carte din repo
        -:   26: */
function _ZN18service_biblioteca15delete_book_srvERKi called 7 returned 71% blocks executed 100%
        7:   27:void service_biblioteca::delete_book_srv(const int &id) {
        7:   28:    repo_carti.delete_book(id);
        7:   28-block  0
call    0 returned 5
        5:   29:}
        -:   30:
        -:   31:/*
        -:   32: * Modifica carte din repo, daca exista.
        -:   33: */
function _ZN18service_biblioteca15modify_book_srvERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_RKiS9_ called 2 returned 0% blocks executed 52%
        2:   34:void service_biblioteca::modify_book_srv(const std::string &autor, const std::string &titlu, const std::string &genre,
        -:   35:                                         const int &an, const int &id) {
        4:   36:    carte modified_book{autor, titlu, genre, an, id};
        2:   36-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:   36-block  1
call    3 returned 2
branch  4 taken 2 (fallthrough)
branch  5 taken 0 (throw)
        2:   36-block  2
call    6 returned 2
branch  7 taken 2 (fallthrough)
branch  8 taken 0 (throw)
        2:   36-block  3
call    9 returned 2
branch 10 taken 2 (fallthrough)
branch 11 taken 0 (throw)
call   12 returned 2
call   13 returned 2
    $$$$$:   36-block  4
    $$$$$:   36-block  5
    $$$$$:   36-block  6
        2:   37:    validator.validate(modified_book);
call    0 returned 2
branch  1 taken 1 (fallthrough)
branch  2 taken 1 (throw)
        1:   38:    repo_carti.modify_book(modified_book);
        1:   38-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1 (throw)
       2*:   39:}
    %%%%%:   39-block  0
call    0 never executed
        2:   39-block  1
call    1 returned 2
        -:   40:
        -:   41:/*
        -:   42: * Returneaza o referinta catre obiectul de tip my_vector, care stocheaza cartile
        -:   43: */
function _ZN18service_biblioteca11get_all_srvEv called 1 returned 100% blocks executed 100%
        1:   44:const vector<carte>& service_biblioteca::get_all_srv() noexcept{
        1:   45:    return repo_carti.get_all();
        1:   45-block  0
call    0 returned 1
        -:   46:}
        -:   47:
function _ZN18service_biblioteca15search_for_bookERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_RKi called 2 returned 50% blocks executed 86%
        2:   48:const carte& service_biblioteca::search_for_book(const std::string &autor, const std::string &titlu, const std::string &genre,
        -:   49:                                                 const int &an) {
        2:   50:    const vector<carte>& all{ repo_carti.get_all() };
        2:   50-block  0
call    0 returned 2
function _ZZN18service_biblioteca15search_for_bookERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_RKiENKUlRK5carteE_clESC_ called 8 returned 100% blocks executed 67%
        2:   51:    auto itr = std::find_if(all.begin(), all.end(), [autor, titlu, genre, an](const carte& book) {
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:   51-block  0
call    3 returned 2
branch  4 taken 2 (fallthrough)
branch  5 taken 0 (throw)
        2:   51-block  1
call    6 returned 2
branch  7 taken 2 (fallthrough)
branch  8 taken 0 (throw)
        2:   51-block  2
call    9 returned 2
call   10 returned 2
call   11 returned 2
branch 12 taken 2 (fallthrough)
branch 13 taken 0 (throw)
        2:   51-block  3
call   14 returned 2
    $$$$$:   51-block  4
call   15 never executed
    $$$$$:   51-block  5
       15:   52:        return book.get_author() == autor ||
branch  0 taken 7 (fallthrough)
branch  1 taken 0
        8:   52-block  0
call    2 returned 8
        8:   52-block  1
    $$$$$:   52-block  2
branch  3 never executed
branch  4 never executed
    $$$$$:   52-block  3
call    5 never executed
       22:   53:               book.get_title() == titlu ||
        7:   53-block  0
call    0 returned 7
branch  1 taken 7 (fallthrough)
branch  2 taken 0 (throw)
        7:   53-block  1
call    3 returned 7
branch  4 taken 7 (fallthrough)
branch  5 taken 0
        7:   53-block  2
call    6 returned 7
        8:   53-block  3
branch  7 taken 8 (fallthrough)
branch  8 taken 0
    $$$$$:   53-block  4
branch  9 never executed
branch 10 never executed
    $$$$$:   53-block  5
call   11 never executed
    $$$$$:   53-block  6
       30:   54:               book.get_genre() == genre ||
        8:   54-block  0
call    0 returned 8
branch  1 taken 8 (fallthrough)
branch  2 taken 0 (throw)
        8:   54-block  1
call    3 returned 8
branch  4 taken 7 (fallthrough)
branch  5 taken 1
        7:   54-block  2
call    6 returned 7
branch  7 taken 7 (fallthrough)
branch  8 taken 0 (throw)
        7:   54-block  3
call    9 returned 7
        1:   54-block  4
        7:   54-block  5
        7:   54-block  6
call   10 returned 7
        8:   54-block  7
branch 11 taken 7 (fallthrough)
branch 12 taken 1
    $$$$$:   54-block  8
branch 13 never executed
branch 14 never executed
    $$$$$:   54-block  9
call   15 never executed
    $$$$$:   54-block 10
       23:   55:               book.get_publication_year() == an;
        7:   55-block  0
call    0 returned 7
branch  1 taken 7 (fallthrough)
branch  2 taken 0 (throw)
        7:   55-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 7
        8:   55-block  2
branch  5 taken 7 (fallthrough)
branch  6 taken 1
        8:   55-block  3
        -:   56:    });
        -:   57:
        2:   58:    if (itr != all.end()) {
call    0 returned 2
call    1 returned 2
branch  2 taken 1 (fallthrough)
branch  3 taken 1
        2:   59:        return *itr;
        1:   59-block  0
call    0 returned 1
        1:   59-block  1
        -:   60:    } else
        1:   61:        throw std::exception{};
        1:   61-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
        -:   62:}
        -:   63:
        -:   64:
        -:   65:/*
        -:   66: * Filtreaza cartile dupa an si titlu
        -:   67: * Daca gaseste o carte cu un camp egal cu $an sau $titlu o adauga in lista
        -:   68: */
function _ZNK18service_biblioteca10filter_srvEiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 2 returned 100% blocks executed 73%
        2:   69:const vector<carte> service_biblioteca::filter_srv(const int an, const string titlu) const {
        2:   70:    vector<carte> filtered_books;
        2:   70-block  0
call    0 returned 2
        2:   71:    const vector<carte>& all{ repo_carti.get_all() };
call    0 returned 2
function _ZZNK18service_biblioteca10filter_srvEiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEENKUlRK5carteE_clES8_ called 8 returned 100% blocks executed 80%
        2:   72:    std::copy_if(all.begin(), all.end(), std::back_inserter(filtered_books), [an, titlu](const carte& book)
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:   72-block  0
call    3 returned 2
branch  4 taken 2 (fallthrough)
branch  5 taken 0 (throw)
        2:   72-block  1
call    6 returned 2
call    7 returned 2
call    8 returned 2
branch  9 taken 2 (fallthrough)
branch 10 taken 0 (throw)
        2:   72-block  2
call   11 returned 2
    $$$$$:   72-block  3
call   12 never executed
    $$$$$:   72-block  4
        8:   73:    { return book.get_publication_year() == an || book.get_title() == titlu; });
        8:   73-block  0
call    0 returned 8
branch  1 taken 8 (fallthrough)
branch  2 taken 0 (throw)
        8:   73-block  1
branch  3 taken 7 (fallthrough)
branch  4 taken 1
        7:   73-block  2
call    5 returned 7
branch  6 taken 7 (fallthrough)
branch  7 taken 0 (throw)
        7:   73-block  3
call    8 returned 7
branch  9 taken 1 (fallthrough)
branch 10 taken 6
        2:   73-block  4
        6:   73-block  5
        8:   73-block  6
branch 11 taken 7 (fallthrough)
branch 12 taken 1
        7:   73-block  7
call   13 returned 7
        8:   73-block  8
        8:   73-block  9
    $$$$$:   73-block 10
branch 14 never executed
branch 15 never executed
    $$$$$:   73-block 11
call   16 never executed
        -:   74:
        2:   75:    return filtered_books;
        2:   75-block  0
    =====:   76:}
    $$$$$:   76-block  0
call    0 never executed
        -:   77:
        -:   78:
        -:   79:/*
        -:   80: * Determina functia care va compara doua carti si va decide daca ele se interschimba
        -:   81: * option : 1 / 2 / 3
        -:   82: * Return type: referinta catre obiectul sortat
        -:   83: */
function _ZNK18service_biblioteca22sorter_based_on_optionEi called 4 returned 100% blocks executed 94%
        4:   84:const vector<carte> service_biblioteca::sorter_based_on_option(int option) const{
        4:   85:    vector<carte> all{ repo_carti.get_all() };
        4:   85-block  0
call    0 returned 4
call    1 returned 4
        4:   86:    if(option == 1)
branch  0 taken 1 (fallthrough)
branch  1 taken 3
        1:   87:        sort(all.begin(), all.end(), repo_carti.sort_by_title);
        1:   87-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
        3:   88:    else if(option == 2)
        3:   88-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 2
        1:   89:        sort(all.begin(), all.end(), repo_carti.sort_by_author);
        1:   89-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
        -:   90:    else
        2:   91:        sort(all.begin(), all.end(), repo_carti.sort_by_publication_year_and_gen);
        2:   91-block  0
call    0 returned 2
call    1 returned 2
call    2 returned 2
branch  3 taken 2 (fallthrough)
branch  4 taken 0 (throw)
        4:   92:    return all;
        4:   92-block  0
        4:   92-block  1
    =====:   93:}
    $$$$$:   93-block  0
call    0 never executed
        -:   94:
        -:   95:
