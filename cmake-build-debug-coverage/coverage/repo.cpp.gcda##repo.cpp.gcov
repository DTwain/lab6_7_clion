        -:    0:Source:D:/INFO 2/SEM 2/oop_lab_6_9/repository/repo.cpp
        -:    0:Graph:D:\INFO 2\SEM 2\oop_lab_6_9\cmake-build-debug-coverage\CMakeFiles\lab6_7_clion.dir\repository\repo.cpp.gcno
        -:    0:Data:D:\INFO 2\SEM 2\oop_lab_6_9\cmake-build-debug-coverage\CMakeFiles\lab6_7_clion.dir\repository\repo.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by obrej on 4/10/2024.
        -:    3://
        -:    4:
        -:    5:#include "../Headers/repo.h"
        -:    6:#include <sstream>
        -:    7:#include <fstream>
        -:    8:#include <vector>
        -:    9:#include <string>
        -:   10:#include <algorithm>
        -:   11:
        -:   12:using std::string;
        -:   13:using std::ostream;
        -:   14:using std::stringstream;
        -:   15:using std::to_string;
        -:   16:using std::vector;
        -:   17:
function _ZN4repo15incrementare_idEv called 81 returned 100% blocks executed 100%
       81:   18:void repo::incrementare_id(){
       81:   19:    this->id += 1;
       81:   20:}
        -:   21:/*
        -:   22: * Returneaza un id pentru cartea pe care dorim sa o adaugam
        -:   23: * Return type: int
        -:   24: */
function _ZNK4repo32get_id_for_next_book_to_be_addedEv called 32 returned 100% blocks executed 100%
       32:   25:const int& repo::get_id_for_next_book_to_be_added() const {
       32:   26:    return this->id;
       32:   26-block  0
        -:   27:}
        -:   28:
function _ZNK4repo25get_reference_from_vectorEv called 2 returned 100% blocks executed 100%
        2:   29:const vector<carte>& repo::get_reference_from_vector() const {
        2:   30:    return carte_vec;
        2:   30-block  0
        -:   31:}
        -:   32:
        -:   33:/*
        -:   34: * Adauga cartea in repo
        -:   35: * Arunca book_repo_exception daca mai exista o cartte cu acelasi Id
        -:   36: */
function _ZN4repo3addERK5carte called 82 returned 99% blocks executed 61%
       82:   37:void repo::add(const carte& obj_carte){
       82:   38:    if(carte_in_repo(obj_carte.get_book_id()))
       82:   38-block  0
call    0 returned 82
branch  1 taken 82 (fallthrough)
branch  2 taken 0 (throw)
       82:   38-block  1
call    3 returned 82
branch  4 taken 82 (fallthrough)
branch  5 taken 0 (throw)
       82:   38-block  2
branch  6 taken 1 (fallthrough)
branch  7 taken 81
    $$$$$:   38-block  3
call    8 never executed
        1:   39:        throw book_repo_exception("Cartea cu id - ul: " + to_string(obj_carte.get_book_id()) + "exista deja");
        1:   39-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   39-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   39-block  2
call    8 returned 1
branch  9 taken 1 (fallthrough)
branch 10 taken 0 (throw)
        1:   39-block  3
call   11 returned 1
branch 12 taken 1 (fallthrough)
branch 13 taken 0 (throw)
        1:   39-block  4
call   14 returned 1
call   15 returned 1
call   16 returned 1
call   17 returned 0
    $$$$$:   39-block  5
call   18 never executed
    $$$$$:   39-block  6
call   19 never executed
    $$$$$:   39-block  7
call   20 never executed
    $$$$$:   39-block  8
    $$$$$:   39-block  9
    $$$$$:   39-block 10
    $$$$$:   39-block 11
call   21 never executed
       81:   40:    this->carte_vec.push_back(obj_carte);
       81:   40-block  0
call    0 returned 81
       81:   41:    this->incrementare_id();
call    0 returned 81
       81:   42:}
        -:   43:
function _ZN4repo10add_pt_cosERK5carte called 14 returned 100% blocks executed 100%
       14:   44:void repo::add_pt_cos(const carte& obj_carte){
       14:   45:    this->carte_vec.push_back(obj_carte);
       14:   45-block  0
call    0 returned 14
       14:   46:}
        -:   47:/*
        -:   48: * Verifica daca cartea cu id ul dat apare in repo
        -:   49: * Return type:
        -:   50: *      true: carta apare in repo
        -:   51: *      false: nu apare in repo
        -:   52: */
function _ZNK4repo13carte_in_repoERKi called 96 returned 100% blocks executed 86%
       96:   53:bool repo::carte_in_repo(const int& id_to_find ) const {
        -:   54:    try {
       96:   55:        find_book_by_id(id_to_find);
       96:   55-block  0
call    0 returned 96
branch  1 taken 12 (fallthrough)
branch  2 taken 84 (throw)
       12:   56:        return true;
       12:   56-block  0
        -:   57:    }
       84:   58:    catch(book_repo_exception&){
       84:   58-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 84
       84:   58-block  1
call    2 returned 84
       84:   59:        return false;
       84:   60:    }
        -:   61:}
        -:   62:/*
        -:   63: *  Returneaza cartea cu id ul dat sau ridica o exceptie daca nu exista
        -:   64: *
        -:   65: */
function _ZNK4repo15find_book_by_idERKi called 118 returned 26% blocks executed 65%
      118:   66:const carte& repo::find_book_by_id(const int& id) const{
      471:   67:    for(const carte& book : this->carte_vec)
      118:   67-block  0
call    0 returned 118
call    1 returned 118
      384:   67-block  1
call    2 returned 384
      353:   67-block  2
call    3 returned 353
      471:   67-block  3
call    4 returned 471
branch  5 taken 384
branch  6 taken 87 (fallthrough)
      384:   68:        if(book.get_book_id() == id)
call    0 returned 384
branch  1 taken 384 (fallthrough)
branch  2 taken 0 (throw)
      384:   68-block  0
branch  3 taken 31 (fallthrough)
branch  4 taken 353
       31:   69:            return book;
       31:   69-block  0
       31:   69-block  1
       87:   70:    throw book_repo_exception("Book with id: " + to_string(id) + " doesn't exist");
       87:   70-block  0
call    0 returned 87
call    1 returned 87
call    2 returned 87
branch  3 taken 87 (fallthrough)
branch  4 taken 0 (throw)
       87:   70-block  1
call    5 returned 87
branch  6 taken 87 (fallthrough)
branch  7 taken 0 (throw)
       87:   70-block  2
call    8 returned 87
branch  9 taken 87 (fallthrough)
branch 10 taken 0 (throw)
       87:   70-block  3
call   11 returned 87
call   12 returned 87
call   13 returned 87
call   14 returned 0
    $$$$$:   70-block  4
call   15 never executed
    $$$$$:   70-block  5
call   16 never executed
    $$$$$:   70-block  6
call   17 never executed
    $$$$$:   70-block  7
    $$$$$:   70-block  8
    $$$$$:   70-block  9
    $$$$$:   70-block 10
call   18 never executed
        -:   71:}
        -:   72:/*
        -:   73: * Sterge cartea cu id ul dat sau ridica o exceptie daca nu gaseste cartea
        -:   74: *
        -:   75: */
function _ZN4repo11delete_bookERKi called 14 returned 79% blocks executed 59%
       14:   76:void repo::delete_book(const int &id) {
       14:   77:    if(!carte_in_repo(id))
       14:   77-block  0
call    0 returned 14
branch  1 taken 14 (fallthrough)
branch  2 taken 0 (throw)
       14:   77-block  1
branch  3 taken 3 (fallthrough)
branch  4 taken 11
        3:   78:        throw book_repo_exception("Cartea cu id-ul " + to_string(id) + " nu exista!");
        3:   78-block  0
call    0 returned 3
call    1 returned 3
call    2 returned 3
branch  3 taken 3 (fallthrough)
branch  4 taken 0 (throw)
        3:   78-block  1
call    5 returned 3
branch  6 taken 3 (fallthrough)
branch  7 taken 0 (throw)
        3:   78-block  2
call    8 returned 3
branch  9 taken 3 (fallthrough)
branch 10 taken 0 (throw)
        3:   78-block  3
call   11 returned 3
call   12 returned 3
call   13 returned 3
call   14 returned 3
    $$$$$:   78-block  4
call   15 never executed
    $$$$$:   78-block  5
call   16 never executed
    $$$$$:   78-block  6
call   17 never executed
    $$$$$:   78-block  7
    $$$$$:   78-block  8
    $$$$$:   78-block  9
    $$$$$:   78-block 10
call   18 never executed
       11:   79:    auto remove_begin = std::remove_if(carte_vec.begin(), carte_vec.end(),
call    0 returned 11
call    1 returned 11
branch  2 taken 11 (fallthrough)
branch  3 taken 0 (throw)
function _ZZN4repo11delete_bookERKiENKUlRK5carteE_clES4_ called 25 returned 100% blocks executed 100%
       36:   80:                                       [id](const carte& obj_carte) { return obj_carte.get_book_id() == id; });
       11:   80-block  0
call    0 returned 11
       25:   80-block  1
call    1 returned 25
       11:   81:    carte_vec.erase(remove_begin, carte_vec.end());
       11:   81-block  0
call    0 returned 11
call    1 returned 11
call    2 returned 11
call    3 returned 11
branch  4 taken 11 (fallthrough)
branch  5 taken 0 (throw)
    $$$$$:   81-block  1
    $$$$$:   81-block  2
    $$$$$:   81-block  3
       11:   82:}
       11:   82-block  0
        -:   83:/*
        -:   84: * Sterge toate cartile din repo
        -:   85: */
function _ZN4repo12goleste_repoEv called 2 returned 100% blocks executed 100%
        2:   86:void repo::goleste_repo() {
        2:   87:    carte_vec.clear();
        2:   87-block  0
call    0 returned 2
        2:   88:}
        -:   89:
        -:   90:/*
        -:   91: * Modifica cartea cu id ul egal cu cel al cartii care
        -:   92: *
        -:   93: */
function _ZN4repo11modify_bookERK5carte called 6 returned 67% blocks executed 73%
        6:   94:void repo::modify_book(const carte& obj_carte) {
        6:   95:    int book_id = obj_carte.get_book_id();
        6:   95-block  0
call    0 returned 6
        6:   96:    bool found = false;
        -:   97:
       14:   98:    for(carte& book: this->carte_vec)
call    0 returned 6
call    1 returned 6
       12:   98-block  0
call    2 returned 12
        8:   98-block  1
call    3 returned 8
       14:   98-block  2
call    4 returned 14
branch  5 taken 12
branch  6 taken 2 (fallthrough)
       12:   99:        if(book.get_book_id() == obj_carte.get_book_id()){
call    0 returned 12
branch  1 taken 12 (fallthrough)
branch  2 taken 0 (throw)
       12:   99-block  0
call    3 returned 12
branch  4 taken 12 (fallthrough)
branch  5 taken 0 (throw)
       12:   99-block  1
branch  6 taken 4 (fallthrough)
branch  7 taken 8
        4:  100:            book = obj_carte;
        4:  100-block  0
call    0 returned 4
branch  1 taken 4 (fallthrough)
branch  2 taken 0 (throw)
        4:  101:            found = true;
        4:  102:            break;
        4:  102-block  0
        -:  103:        }
        -:  104:
        6:  105:    if(!found) {
        6:  105-block  0
branch  0 taken 2 (fallthrough)
branch  1 taken 4
        2:  106:        throw book_repo_exception("Doesn't exist book with id: " + to_string(book_id));
        2:  106-block  0
call    0 returned 2
call    1 returned 2
call    2 returned 2
branch  3 taken 2 (fallthrough)
branch  4 taken 0 (throw)
        2:  106-block  1
call    5 returned 2
branch  6 taken 2 (fallthrough)
branch  7 taken 0 (throw)
        2:  106-block  2
call    8 returned 2
call    9 returned 2
call   10 returned 0
    $$$$$:  106-block  3
call   11 never executed
    $$$$$:  106-block  4
call   12 never executed
    $$$$$:  106-block  5
    $$$$$:  106-block  6
    $$$$$:  106-block  7
call   13 never executed
        -:  107:    }
        4:  108:}
        4:  108-block  0
        -:  109:
function _ZN4repo7get_allEv called 43 returned 100% blocks executed 100%
       43:  110:const vector<carte>& repo::get_all() {
       43:  111:    return carte_vec;
       43:  111-block  0
        -:  112:}
        -:  113:
function _ZlsRSoRK19book_repo_exception called 5 returned 100% blocks executed 100%
        5:  114:ostream& operator<<(ostream& out, const book_repo_exception& ex){
        5:  115:    out << ex.msg;
        5:  115-block  0
call    0 returned 5
        5:  116:    return out;
        -:  117:}
        -:  118:
        -:  119:// urmeaza cele trei functii de camparare a doua carti
        -:  120:
        -:  121:// comparare dupa titlu
function _ZN4repo13sort_by_titleERK5carteS2_ called 8 returned 100% blocks executed 71%
        8:  122:bool repo::sort_by_title(const carte &book1, const carte &book2) {
        8:  123:    return book1.get_title() < book2.get_title();
        8:  123-block  0
call    0 returned 8
call    1 returned 8
branch  2 taken 8 (fallthrough)
branch  3 taken 0 (throw)
        8:  123-block  1
call    4 returned 8
branch  5 taken 8 (fallthrough)
branch  6 taken 0 (throw)
        8:  123-block  2
call    7 returned 8
call    8 returned 8
call    9 returned 8
call   10 returned 8
        8:  123-block  3
    $$$$$:  123-block  4
    $$$$$:  123-block  5
call   11 never executed
    $$$$$:  123-block  6
        -:  124:}
        -:  125:
        -:  126:// comparare dupa autor
function _ZN4repo14sort_by_authorERK5carteS2_ called 4 returned 100% blocks executed 71%
        4:  127:bool repo::sort_by_author(const carte &book1, const carte &book2) {
        4:  128:    return book1.get_author() < book2.get_author();
        4:  128-block  0
call    0 returned 4
call    1 returned 4
branch  2 taken 4 (fallthrough)
branch  3 taken 0 (throw)
        4:  128-block  1
call    4 returned 4
branch  5 taken 4 (fallthrough)
branch  6 taken 0 (throw)
        4:  128-block  2
call    7 returned 4
call    8 returned 4
call    9 returned 4
call   10 returned 4
        4:  128-block  3
    $$$$$:  128-block  4
    $$$$$:  128-block  5
call   11 never executed
    $$$$$:  128-block  6
        -:  129:}
        -:  130:
        -:  131://comaparare dupa an si gen
function _ZN4repo32sort_by_publication_year_and_genERK5carteS2_ called 9 returned 100% blocks executed 82%
        9:  132:bool repo::sort_by_publication_year_and_gen(const carte &book1, const carte &book2) {
        9:  133:    if(book1.get_publication_year()< book2.get_publication_year())
        9:  133-block  0
call    0 returned 9
call    1 returned 9
branch  2 taken 2 (fallthrough)
branch  3 taken 7
        2:  134:        return true;
        2:  134-block  0
        7:  135:    else if(book1.get_publication_year() == book2.get_publication_year())
        7:  135-block  0
call    0 returned 7
call    1 returned 7
branch  2 taken 1 (fallthrough)
branch  3 taken 6
        1:  136:        return book1.get_genre() < book2.get_genre();
        1:  136-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  136-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  136-block  2
call    7 returned 1
call    8 returned 1
call    9 returned 1
call   10 returned 1
    $$$$$:  136-block  3
    $$$$$:  136-block  4
call   11 never executed
    $$$$$:  136-block  5
        6:  137:    return false;
        6:  137-block  0
        -:  138:}
        -:  139:
function _ZN9repo_file13write_to_fileEv called 7 returned 100% blocks executed 53%
        7:  140:void repo_file::write_to_file() {
        7:  141:    std::ofstream cout(filename);
        7:  141-block  0
call    0 returned 7
branch  1 taken 7 (fallthrough)
branch  2 taken 0 (throw)
        7:  142:    if(!cout.is_open())
        7:  142-block  0
call    0 returned 7
branch  1 taken 0 (fallthrough)
branch  2 taken 7
    #####:  143:        throw book_repo_exception("Nu s-a deschis fisierul pentru scriere");
    %%%%%:  143-block  0
call    0 never executed
    %%%%%:  143-block  1
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    %%%%%:  143-block  2
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
    %%%%%:  143-block  3
call    7 never executed
    %%%%%:  143-block  4
call    8 never executed
    $$$$$:  143-block  5
call    9 never executed
    $$$$$:  143-block  6
    $$$$$:  143-block  7
    $$$$$:  143-block  8
call   10 never executed
        -:  144:
       20:  145:    for(const carte& book : get_all()){
        7:  145-block  0
call    0 returned 7
branch  1 taken 7 (fallthrough)
branch  2 taken 0 (throw)
        7:  145-block  1
call    3 returned 7
call    4 returned 7
       13:  145-block  2
call    5 returned 13
       20:  145-block  3
call    6 returned 20
branch  7 taken 13
branch  8 taken 7 (fallthrough)
       13:  146:        cout<<book.get_book_id()<<";"<<book.get_author()<<";"<<book.get_title()<<";"<<book.get_genre()<<";"<<book.get_publication_year()<<'\n';
call    0 returned 13
branch  1 taken 13 (fallthrough)
branch  2 taken 0 (throw)
       13:  146-block  0
call    3 returned 13
branch  4 taken 13 (fallthrough)
branch  5 taken 0 (throw)
       13:  146-block  1
call    6 returned 13
branch  7 taken 13 (fallthrough)
branch  8 taken 0 (throw)
       13:  146-block  2
call    9 returned 13
branch 10 taken 13 (fallthrough)
branch 11 taken 0 (throw)
       13:  146-block  3
call   12 returned 13
branch 13 taken 13 (fallthrough)
branch 14 taken 0 (throw)
       13:  146-block  4
call   15 returned 13
branch 16 taken 13 (fallthrough)
branch 17 taken 0 (throw)
       13:  146-block  5
call   18 returned 13
branch 19 taken 13 (fallthrough)
branch 20 taken 0 (throw)
       13:  146-block  6
call   21 returned 13
branch 22 taken 13 (fallthrough)
branch 23 taken 0 (throw)
       13:  146-block  7
call   24 returned 13
branch 25 taken 13 (fallthrough)
branch 26 taken 0 (throw)
       13:  146-block  8
call   27 returned 13
branch 28 taken 13 (fallthrough)
branch 29 taken 0 (throw)
       13:  146-block  9
call   30 returned 13
branch 31 taken 13 (fallthrough)
branch 32 taken 0 (throw)
       13:  146-block 10
call   33 returned 13
branch 34 taken 13 (fallthrough)
branch 35 taken 0 (throw)
       13:  146-block 11
call   36 returned 13
branch 37 taken 13 (fallthrough)
branch 38 taken 0 (throw)
       13:  146-block 12
call   39 returned 13
branch 40 taken 13 (fallthrough)
branch 41 taken 0 (throw)
       13:  146-block 13
call   42 returned 13
branch 43 taken 13 (fallthrough)
branch 44 taken 0 (throw)
       13:  146-block 14
call   45 returned 13
call   46 returned 13
call   47 returned 13
call   48 returned 13
    $$$$$:  146-block 15
call   49 never executed
    $$$$$:  146-block 16
    $$$$$:  146-block 17
call   50 never executed
    $$$$$:  146-block 18
    $$$$$:  146-block 19
call   51 never executed
    $$$$$:  146-block 20
        -:  147:    }
        -:  148:
        7:  149:    cout.close();
        7:  149-block  0
call    0 returned 7
branch  1 taken 7 (fallthrough)
branch  2 taken 0 (throw)
        7:  150:}
        7:  150-block  0
call    0 returned 7
    $$$$$:  150-block  1
call    1 never executed
        -:  151:
function _ZN9repo_file14load_from_fileEv called 3 returned 100% blocks executed 52%
        3:  152:void repo_file::load_from_file() {
        3:  153:    std::ifstream cin(filename);
        3:  153-block  0
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        3:  154:    if(!cin.is_open())
        3:  154-block  0
call    0 returned 3
branch  1 taken 0 (fallthrough)
branch  2 taken 3
    #####:  155:        throw book_repo_exception("Nu s-a deschis fisierul pentru citire");
    %%%%%:  155-block  0
call    0 never executed
    %%%%%:  155-block  1
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    %%%%%:  155-block  2
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
    %%%%%:  155-block  3
call    7 never executed
    %%%%%:  155-block  4
call    8 never executed
    $$$$$:  155-block  5
call    9 never executed
    $$$$$:  155-block  6
    $$$$$:  155-block  7
    $$$$$:  155-block  8
call   10 never executed
        -:  156:
        3:  157:    cin.seekg(0, std::ios::end);
        3:  157-block  0
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        3:  158:    if (cin.tellg() == 0) {
        3:  158-block  0
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        3:  158-block  1
call    3 returned 3
branch  4 taken 2 (fallthrough)
branch  5 taken 1
    $$$$$:  158-block  2
        2:  159:        cin.close();
        2:  159-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:  160:        return;
        2:  160-block  0
        -:  161:    }
        1:  162:    cin.seekg(0, std::ios::beg);
        1:  162-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        3:  163:    while(!cin.eof()){
        1:  163-block  0
        3:  163-block  1
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        3:  163-block  2
branch  3 taken 3
branch  4 taken 0 (fallthrough)
        3:  164:        string linie;
        3:  164-block  0
call    0 returned 3
        3:  165:        getline(cin,linie);
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        -:  166:
        3:  167:        if(linie.size() == 0){
        3:  167-block  0
call    0 returned 3
branch  1 taken 1 (fallthrough)
branch  2 taken 2
        1:  168:            break;
        1:  168-block  0
        -:  169:        }
        2:  170:        std::vector<std::string> tokens;
        2:  171:        std::istringstream iss(linie);
        2:  171-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:  172:        std::string token;
        2:  172-block  0
call    0 returned 2
        -:  173:
       12:  174:        while (std::getline(iss, token, ';')) {
       12:  174-block  0
call    0 returned 12
branch  1 taken 12 (fallthrough)
branch  2 taken 0 (throw)
       12:  174-block  1
call    3 returned 12
branch  4 taken 12 (fallthrough)
branch  5 taken 0 (throw)
       12:  174-block  2
branch  6 taken 10
branch  7 taken 2 (fallthrough)
       10:  175:            tokens.push_back(token);
       10:  175-block  0
call    0 returned 10
branch  1 taken 10 (fallthrough)
branch  2 taken 0 (throw)
        -:  176:        }
        -:  177:
        2:  178:        if(tokens.size() >= 6)
        2:  178-block  0
call    0 returned 2
branch  1 taken 0 (fallthrough)
branch  2 taken 2
    #####:  179:            throw book_repo_exception("Fisierul in care se stocheaza cartile contile o line cu mai mult de 5 date");
    %%%%%:  179-block  0
call    0 never executed
    %%%%%:  179-block  1
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    %%%%%:  179-block  2
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
    %%%%%:  179-block  3
call    7 never executed
    %%%%%:  179-block  4
call    8 never executed
    $$$$$:  179-block  5
call    9 never executed
    $$$$$:  179-block  6
    $$$$$:  179-block  7
    $$$$$:  179-block  8
call   10 never executed
        -:  180:        // Print the tokens
        2:  181:        int id = std::stoi(tokens[0]);
        2:  181-block  0
call    0 returned 2
call    1 returned 2
branch  2 taken 2 (fallthrough)
branch  3 taken 0 (throw)
        2:  182:        string autor = tokens[1];
        2:  182-block  0
call    0 returned 2
call    1 returned 2
branch  2 taken 2 (fallthrough)
branch  3 taken 0 (throw)
        2:  183:        string titlu = tokens[2];
        2:  183-block  0
call    0 returned 2
call    1 returned 2
branch  2 taken 2 (fallthrough)
branch  3 taken 0 (throw)
        2:  184:        string gen = tokens[3];
        2:  184-block  0
call    0 returned 2
call    1 returned 2
branch  2 taken 2 (fallthrough)
branch  3 taken 0 (throw)
        2:  185:        int an = std::stoi(tokens[4]);
        2:  185-block  0
call    0 returned 2
call    1 returned 2
branch  2 taken 2 (fallthrough)
branch  3 taken 0 (throw)
        -:  186:
        2:  187:        carte book{autor, titlu, gen, an, id};
        2:  187-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:  187-block  1
call    3 returned 2
branch  4 taken 2 (fallthrough)
branch  5 taken 0 (throw)
        2:  187-block  2
call    6 returned 2
branch  7 taken 2 (fallthrough)
branch  8 taken 0 (throw)
        2:  187-block  3
call    9 returned 2
branch 10 taken 2 (fallthrough)
branch 11 taken 0 (throw)
        2:  187-block  4
call   12 returned 2
call   13 returned 2
call   14 returned 2
    $$$$$:  187-block  5
call   15 never executed
    $$$$$:  187-block  6
    $$$$$:  187-block  7
call   16 never executed
    $$$$$:  187-block  8
    $$$$$:  187-block  9
call   17 never executed
    $$$$$:  187-block 10
        2:  188:        repo::add(book);
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        3:  189:    }
        2:  189-block  0
call    0 returned 2
call    1 returned 2
call    2 returned 2
call    3 returned 2
call    4 returned 2
call    5 returned 2
call    6 returned 2
        3:  189-block  1
call    7 returned 3
branch  8 taken 2 (fallthrough)
branch  9 taken 1
    $$$$$:  189-block  2
call   10 never executed
    $$$$$:  189-block  3
call   11 never executed
    $$$$$:  189-block  4
call   12 never executed
    $$$$$:  189-block  5
call   13 never executed
    $$$$$:  189-block  6
call   14 never executed
    $$$$$:  189-block  7
call   15 never executed
    $$$$$:  189-block  8
call   16 never executed
    $$$$$:  189-block  9
call   17 never executed
        1:  190:    cin.close();
        1:  190-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        3:  191:}
        1:  191-block  0
        3:  191-block  1
call    0 returned 3
branch  1 taken 1 (fallthrough)
branch  2 taken 2
    $$$$$:  191-block  2
call    3 never executed
        -:  192:
function _ZN16probability_repo19cat_de_norocos_estiEv called 0 returned 0% blocks executed 0%
    #####:  193:void probability_repo::cat_de_norocos_esti() {
    #####:  194:    int prob_din_doua_cifre = probability * 10;
    #####:  195:    int val_random = rand() % 100;
    %%%%%:  195-block  0
call    0 never executed
    #####:  196:    if(val_random <= prob_din_doua_cifre)
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:  197:        throw book_repo_exception("Ai ghinion azi John");
    %%%%%:  197-block  0
call    0 never executed
    %%%%%:  197-block  1
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    %%%%%:  197-block  2
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
    %%%%%:  197-block  3
call    7 never executed
    %%%%%:  197-block  4
call    8 never executed
    $$$$$:  197-block  5
call    9 never executed
    $$$$$:  197-block  6
    $$$$$:  197-block  7
    $$$$$:  197-block  8
call   10 never executed
    #####:  198:}
    %%%%%:  198-block  0
        -:  199:
function _ZN16probability_repo3addERK5carte called 0 returned 0% blocks executed 0%
    #####:  200:void probability_repo::add(const carte &carte_obj) {
    #####:  201:    cat_de_norocos_esti();
    %%%%%:  201-block  0
call    0 never executed
    #####:  202:    if(!(lista_carti.find(carte_obj.get_book_id()) != lista_carti.end()))
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    %%%%%:  202-block  0
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
    %%%%%:  202-block  1
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed
    $$$$$:  202-block  2
    $$$$$:  202-block  3
    $$$$$:  202-block  4
call   10 never executed
    #####:  203:        throw book_repo_exception("Exista cartea deja");
    %%%%%:  203-block  0
call    0 never executed
    %%%%%:  203-block  1
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    %%%%%:  203-block  2
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
    %%%%%:  203-block  3
call    7 never executed
    %%%%%:  203-block  4
call    8 never executed
    $$$$$:  203-block  5
call    9 never executed
    $$$$$:  203-block  6
    $$$$$:  203-block  7
    $$$$$:  203-block  8
call   10 never executed
    #####:  204:    lista_carti.insert(std::make_pair(carte_obj.get_book_id(), carte_obj));
    %%%%%:  204-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  204-block  1
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:  204-block  2
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
    %%%%%:  204-block  3
call    9 never executed
    $$$$$:  204-block  4
call   10 never executed
    $$$$$:  204-block  5
    $$$$$:  204-block  6
    #####:  205:}
function _ZN16probability_repo11delete_bookERKi called 0 returned 0% blocks executed 0%
    #####:  206:void probability_repo::delete_book(const int &id) {
    #####:  207:    cat_de_norocos_esti();
    %%%%%:  207-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  208:    auto iter = lista_carti.find(id);
    %%%%%:  208-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  209:    if(iter != lista_carti.end())
    %%%%%:  209-block  0
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed
    #####:  210:        lista_carti.erase(iter);
    %%%%%:  210-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -:  211:    else
    #####:  212:        throw book_repo_exception("Nu exista cartea cu id-ul dat");
    %%%%%:  212-block  0
call    0 never executed
    %%%%%:  212-block  1
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    %%%%%:  212-block  2
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
    %%%%%:  212-block  3
call    7 never executed
    %%%%%:  212-block  4
call    8 never executed
    $$$$$:  212-block  5
call    9 never executed
    $$$$$:  212-block  6
    $$$$$:  212-block  7
    $$$$$:  212-block  8
call   10 never executed
    #####:  213:}
    %%%%%:  213-block  0
        -:  214:
function _ZN16probability_repo11modify_bookERK5carte called 0 returned 0% blocks executed 0%
    #####:  215:void probability_repo::modify_book(const carte &modified_book) {
    #####:  216:    cat_de_norocos_esti();
    %%%%%:  216-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    #####:  217:    auto iter = lista_carti.find(modified_book.get_book_id());
    %%%%%:  217-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  217-block  1
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    $$$$$:  217-block  2
    #####:  218:    if(iter != lista_carti.end())
    %%%%%:  218-block  0
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed
    #####:  219:        lista_carti[modified_book.get_book_id()] = modified_book;
    %%%%%:  219-block  0
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
    %%%%%:  219-block  1
call    3 never executed
branch  4 never executed (fallthrough)
branch  5 never executed (throw)
    %%%%%:  219-block  2
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
    $$$$$:  219-block  3
        -:  220:    else
    #####:  221:        throw book_repo_exception("Nu exista cartea pentru modificare");
    %%%%%:  221-block  0
call    0 never executed
    %%%%%:  221-block  1
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
    %%%%%:  221-block  2
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
    %%%%%:  221-block  3
call    7 never executed
    %%%%%:  221-block  4
call    8 never executed
    $$$$$:  221-block  5
call    9 never executed
    $$$$$:  221-block  6
    $$$$$:  221-block  7
    $$$$$:  221-block  8
call   10 never executed
    #####:  222:}
    %%%%%:  222-block  0
        -:  223:
function _ZN16probability_repo7get_allEv called 0 returned 0% blocks executed 0%
    #####:  224:const vector<carte>& probability_repo::get_all() {
    #####:  225:    cat_de_norocos_esti();
    %%%%%:  225-block  0
call    0 never executed
    #####:  226:    lista.clear();
call    0 never executed
    #####:  227:    for(const auto& itr: lista_carti)
call    0 never executed
call    1 never executed
    %%%%%:  227-block  0
call    2 never executed
    %%%%%:  227-block  1
call    3 never executed
    %%%%%:  227-block  2
call    4 never executed
branch  5 never executed
branch  6 never executed (fallthrough)
    #####:  228:        lista.push_back(itr.second);
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed (throw)
        -:  229:
    #####:  230:    return lista;
    %%%%%:  230-block  0
    %%%%%:  230-block  1
        -:  231:}
